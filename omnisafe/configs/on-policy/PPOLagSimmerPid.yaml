# Copyright 2022 OmniSafe Team. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================

defaults:
  # --------------------------------------Basic Configurations----------------------------------- #
  ## -----------------------------Basic configurations for base class PG------------------------ ##
  # The random seed
  seed: 0
  # Number of epochs
  epochs: 500
  # Number of steps per epoch
  steps_per_epoch: 30000
  # Number of update iteration for Actor network
  actor_iters: 80
  # Number of update iteration for Critic network
  critic_iters: 40
  # Check if all models own the same parameter values every `check_freq` epoch
  check_freq: 25
  # Save model to disk every `check_freq` epochs
  save_freq: 100
  # Entropy coefficient for PPO loss
  entropy_coef: 0.01
  # The max length of per epoch
  max_ep_len: 1000
  # The size of mini batch
  num_mini_batches: 16
  # The learning rate of Actor network
  actor_lr: 0.0003
  # The learning rate of Critic network
  critic_lr: 0.001
  # The Address for saving training process data
  data_dir: "./runs"
  ## ---------------------------Basic configurations for derived class PPOLag------------------- ##
  # The thereshold for KL early stopping
  target_kl: 0.01
  # The clip range for PPO loss
  clip: 0.2

  # ---------------------------------------Optional Configuration-------------------------------- #
  ## -----------------------------------Configuration For Cost Critic--------------------------- ##
  # Whether to use cost critic
  use_cost: True
  # Cost discounted factor
  cost_gamma: 1.0
  # Whther to use linear decay of learning rate
  linear_lr_decay: False
  # Whether to use exploration noise anneal
  exploration_noise_anneal: True
  # Whther to use reward penalty
  reward_penalty: False
  # Whether to use KL early stopping
  kl_early_stopping: True
  # Whether to use max gradient norm
  use_max_grad_norm: False
  # The thereshold of max gradient norm
  max_grad_norm: 0.5
  # Whether to use reward scaling
  scale_rewards: False
  # Whether to use standardized observation
  standardized_obs: True
  ## ---------------------------------------Configuration For Model----------------------------- ##
  model_cfgs:
    # Whether to share the weight of Actor network with Critic network
    shared_weights: False
    # The mode to initiate the weight of network, choosing from "kaiming_uniform", "xavier_normal", "glorot" and "orthogonal".
    weight_initialization_mode: "kaiming_uniform"
    # Configuration of Actor and Critic network
    ac_kwargs:
      # Configuration of Actor network
      pi:
        # Type of Actor, choosing from "gaussian_annealing", "gaussian_std_net_actor", "gaussian_learning_actor", "categorical_actor"
        actor_type: gaussian_annealing
        # Size of hidden layers
        hidden_sizes: [64, 64]
        # Type of activation functon, choosing from "tanh", "relu", "sigmoid", "identity", "softplus"
        activation: tanh
      val:
        # Size of hidden layers
        hidden_sizes: [64, 64]
        # Type of activation functon, choosing from "tanh", "relu", "sigmoid", "identity", "softplus"
        activation: tanh
  ## --------------------------------------Configuration For Buffer----------------------------- ##
  buffer_cfgs:
    # Reward discounted factor
    gamma: 0.99
    # Parameters used to estimate future rewards in GAE
    lam: 0.95
    # Parameters used to estimate future costs in GAE
    lam_c: 0.95
    # Method to estimate the advantage reward/cost, choosing from "gae", "plain", "vtrace"
    adv_estimation_method: gae
    # Whether to use standardized reward
    standardized_reward: True
    # Whether to use standardized cost
    standardized_cost: True
   ## ----------------------------------Configuration For Lagrangian multiplier---------------------- ##
  lagrange_cfgs:
    # Tolerance of constraint violation
    cost_limit: 25.0
    # Initial value of lagrangian multiplier
    lagrangian_multiplier_init: 0.001
    # Learning rate of lagrangian multiplier
    lambda_lr: 0.035
    # Type of lagrangian optimizer
    lambda_optimizer: "Adam"
  ## Configuration For Env_Wrapper
  env_cfgs:
    # The reward when the state is unsafe
    unsafe_reward: -0.05
    # The lower bound of safety budget
    lower_budget: 15
    # The upper bound of safety budget
    upper_budget: 25
    # The dicounted factor
    simmer_gamma: 0.999
    # Whether to scale the safety budget
    scale_safety_budget: True
    # Type of Simmer Controller
    simmer_controller: 'PID'
    # Configuration of Simmer Controller
    controller_cfgs:
      # Kp for PID
      pid_kp: 0.1
      # Ki for PID
      pid_ki: 0.01
      # Kd for PID
      pid_kd: 0.01
      # The step size for PID
      step_size: 2
      # Lowpass filter coefficient
      tau: 0.95
